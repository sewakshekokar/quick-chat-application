{"ast":null,"code":"import toast from\"react-hot-toast\";import{useDispatch,useSelector}from\"react-redux\";import{createNewChat}from'./../../../apiCalls/chat';import{hideLoader,showLoader}from\"../../../redux/loaderSlice\";import{setAllChats,setSelectedChat}from'./../../../redux/usersSlice';import moment from\"moment\";import{useEffect}from\"react\";import store from\"../../../redux/store\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function UsersList(_ref){let{searchKey,socket,onlineUser}=_ref;const{allUsers,allChats,user:currentUser,selectedChat}=useSelector(state=>state.userReducer);const dispatch=useDispatch();const startNewChat=async searchedUserId=>{let response=null;try{dispatch(showLoader());response=await createNewChat([currentUser._id,searchedUserId]);dispatch(hideLoader());if(response.success){toast.success(response.message);const newChat=response.data;const updatedChat=[...allChats,newChat];dispatch(setAllChats(updatedChat));dispatch(setSelectedChat(newChat));}}catch(error){toast.error(response.message);dispatch(hideLoader());}};const openChat=selectedUserId=>{const chat=allChats.find(chat=>chat.members.map(m=>m._id).includes(currentUser._id)&&chat.members.map(m=>m._id).includes(selectedUserId));if(chat){dispatch(setSelectedChat(chat));}};const IsSelectedChat=user=>{if(selectedChat){return selectedChat.members.map(m=>m._id).includes(user._id);}return false;};const getLastMessageTimeStamp=userId=>{const chat=allChats.find(chat=>chat.members.map(m=>m._id).includes(userId));if(!chat||!(chat!==null&&chat!==void 0&&chat.lastMessage)){return\"\";}else{var _chat$lastMessage;return moment(chat===null||chat===void 0?void 0:(_chat$lastMessage=chat.lastMessage)===null||_chat$lastMessage===void 0?void 0:_chat$lastMessage.createdAt).format('hh:mm A');}};const getlastMessage=userId=>{const chat=allChats.find(chat=>chat.members.map(m=>m._id).includes(userId));if(!chat||!chat.lastMessage){return\"\";}else{var _chat$lastMessage2,_chat$lastMessage3,_chat$lastMessage3$te;const msgPrefix=(chat===null||chat===void 0?void 0:(_chat$lastMessage2=chat.lastMessage)===null||_chat$lastMessage2===void 0?void 0:_chat$lastMessage2.sender)===currentUser._id?\"You: \":\"\";return msgPrefix+(chat===null||chat===void 0?void 0:(_chat$lastMessage3=chat.lastMessage)===null||_chat$lastMessage3===void 0?void 0:(_chat$lastMessage3$te=_chat$lastMessage3.text)===null||_chat$lastMessage3$te===void 0?void 0:_chat$lastMessage3$te.substring(0,25));}};function formatName(user){var _user$lastname;let fname=user.firstname.at(0).toUpperCase()+user.firstname.slice(1).toLowerCase();let lname=((_user$lastname=user.lastname)===null||_user$lastname===void 0?void 0:_user$lastname.at(0).toUpperCase())+user.lastname.slice(1).toLowerCase();return fname+' '+lname;}useEffect(()=>{socket.off('set-message-count').on('set-message-count',message=>{const selectedChat=store.getState().userReducer.selectedChat;let allChats=store.getState().userReducer.allChats;if((selectedChat===null||selectedChat===void 0?void 0:selectedChat._id)!==message.chatId){const updatedchats=allChats.map(chat=>{if(chat._id===message.chatId){return{...chat,unreadMessageCount:((chat===null||chat===void 0?void 0:chat.unreadMessageCount)||0)+1,lastMessage:message};}return chat;});allChats=updatedchats;}//1. FIND THE LATEST CHAT\nconst latestChat=allChats.find(chat=>chat._id===message.chatId);//2. GET ALL OTHER CHATS\nconst otherChats=allChats.filter(chat=>chat._id!==message.chatId);//3. CREATE A NEW ARRAY LATEST CHA ON TOP & THN OTHER CHATS\nallChats=[latestChat,...otherChats];dispatch(setAllChats(allChats));});},[]);const getUnreadMessageCount=userId=>{var _chat$lastMessage4;const chat=allChats.find(chat=>chat.members.map(m=>m._id).includes(userId));if(chat&&chat.unreadMessageCount&&((_chat$lastMessage4=chat.lastMessage)===null||_chat$lastMessage4===void 0?void 0:_chat$lastMessage4.sender)!==currentUser._id){return/*#__PURE__*/_jsxs(\"div\",{className:\"unread-message-counter\",children:[\" \",chat.unreadMessageCount,\" \"]});}else{return\"\";}};function getData(){if(searchKey===\"\"){return allChats;}else{return allUsers.filter(user=>{var _user$firstname,_user$lastname2;return((_user$firstname=user.firstname)===null||_user$firstname===void 0?void 0:_user$firstname.toLowerCase().includes(searchKey===null||searchKey===void 0?void 0:searchKey.toLowerCase()))||((_user$lastname2=user.lastname)===null||_user$lastname2===void 0?void 0:_user$lastname2.toLowerCase().includes(searchKey===null||searchKey===void 0?void 0:searchKey.toLowerCase()));});}}return getData().map(obj=>{let user=obj;if(obj.members){user=obj.members.find(mem=>mem._id!==currentUser._id);}return/*#__PURE__*/_jsx(\"div\",{className:\"user-search-filter\",onClick:()=>openChat(user._id),children:/*#__PURE__*/_jsx(\"div\",{className:IsSelectedChat(user)?\"selected-user\":\"filtered-user\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"filter-user-display\",children:[user.profilePic&&/*#__PURE__*/_jsx(\"img\",{src:user.profilePic,alt:\"Profile Pic\",className:\"user-profile-image\",style:onlineUser.includes(user._id)?{border:'#82e0aa 3px solid'}:{}}),!user.profilePic&&/*#__PURE__*/_jsx(\"div\",{className:IsSelectedChat(user)?\"user-selected-avatar\":\"user-default-avatar\",style:onlineUser.includes(user._id)?{border:'#82e0aa 3px solid'}:{},children:user.firstname.charAt(0).toUpperCase()+user.lastname.charAt(0).toUpperCase()}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-user-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-display-name\",children:formatName(user)}),/*#__PURE__*/_jsx(\"div\",{className:\"user-display-email\",children:getlastMessage(user._id)||user.email})]}),/*#__PURE__*/_jsxs(\"div\",{children:[getUnreadMessageCount(user._id),/*#__PURE__*/_jsx(\"div\",{className:\"last-message-timestamp\",children:getLastMessageTimeStamp(user._id)})]}),!allChats.find(chat=>chat.members.map(m=>m._id).includes(user._id))&&/*#__PURE__*/_jsx(\"div\",{className:\"user-start-chat\",children:/*#__PURE__*/_jsx(\"button\",{className:\"user-start-chat-btn\",onClick:()=>startNewChat(user._id),children:\"Start Chat\"})})]})})},user._id);});}export default UsersList;","map":{"version":3,"names":["toast","useDispatch","useSelector","createNewChat","hideLoader","showLoader","setAllChats","setSelectedChat","moment","useEffect","store","jsxs","_jsxs","jsx","_jsx","UsersList","_ref","searchKey","socket","onlineUser","allUsers","allChats","user","currentUser","selectedChat","state","userReducer","dispatch","startNewChat","searchedUserId","response","_id","success","message","newChat","data","updatedChat","error","openChat","selectedUserId","chat","find","members","map","m","includes","IsSelectedChat","getLastMessageTimeStamp","userId","lastMessage","_chat$lastMessage","createdAt","format","getlastMessage","_chat$lastMessage2","_chat$lastMessage3","_chat$lastMessage3$te","msgPrefix","sender","text","substring","formatName","_user$lastname","fname","firstname","at","toUpperCase","slice","toLowerCase","lname","lastname","off","on","getState","chatId","updatedchats","unreadMessageCount","latestChat","otherChats","filter","getUnreadMessageCount","_chat$lastMessage4","className","children","getData","_user$firstname","_user$lastname2","obj","mem","onClick","profilePic","src","alt","style","border","charAt","email"],"sources":["/Users/sewak/Desktop/quick-chat-application/client/src/pages/home/components/userList.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewChat } from './../../../apiCalls/chat';\r\nimport { hideLoader, showLoader } from \"../../../redux/loaderSlice\";\r\nimport { setAllChats, setSelectedChat } from './../../../redux/usersSlice';\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport store from \"../../../redux/store\";\r\n\r\nfunction UsersList({searchKey, socket, onlineUser}){\r\n    const { allUsers, allChats, user: currentUser, selectedChat } = useSelector(state => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const startNewChat = async (searchedUserId) => {\r\n        let response = null;\r\n        try{\r\n            dispatch(showLoader());\r\n            response =await createNewChat([currentUser._id, searchedUserId]);\r\n            dispatch(hideLoader());\r\n\r\n            if(response.success){\r\n                toast.success(response.message);\r\n                const newChat = response.data;\r\n                const updatedChat = [...allChats, newChat]\r\n                dispatch(setAllChats(updatedChat));\r\n                dispatch(setSelectedChat(newChat));\r\n            }\r\n        }catch(error){\r\n            toast.error(response.message);\r\n            dispatch(hideLoader());\r\n        }\r\n    }\r\n\r\n    const openChat = (selectedUserId) => {\r\n        const chat = allChats.find(chat => \r\n            chat.members.map(m => m._id).includes(currentUser._id) && \r\n            chat.members.map(m => m._id).includes(selectedUserId)\r\n        )\r\n\r\n        if(chat){\r\n            dispatch(setSelectedChat(chat));\r\n        }\r\n    }\r\n\r\n    const IsSelectedChat = (user) => {\r\n        if(selectedChat){\r\n            return selectedChat.members.map(m => m._id).includes(user._id);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const getLastMessageTimeStamp = (userId) => {\r\n        const chat = allChats.find(chat => chat.members.map(m => m._id).includes(userId));\r\n\r\n        if(!chat || !chat?.lastMessage){\r\n            return \"\";\r\n        }else{\r\n            return moment(chat?.lastMessage?.createdAt).format('hh:mm A');\r\n        }\r\n    }\r\n\r\n    const getlastMessage = (userId) => {\r\n        const chat = allChats.find(chat => chat.members.map(m => m._id).includes(userId));\r\n\r\n        if(!chat || !chat.lastMessage){\r\n            return \"\";\r\n        }else{\r\n            const msgPrefix = chat?.lastMessage?.sender === currentUser._id ? \"You: \" : \"\";\r\n            return msgPrefix + chat?.lastMessage?.text?.substring(0, 25);\r\n        }\r\n    }\r\n\r\n    function formatName(user){\r\n        let fname = user.firstname.at(0).toUpperCase() + user.firstname.slice(1).toLowerCase();\r\n        let lname = user.lastname?.at(0).toUpperCase() + user.lastname.slice(1).toLowerCase();\r\n        return fname + ' ' + lname;\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.off('set-message-count').on('set-message-count', (message) => {\r\n            const selectedChat = store.getState().userReducer.selectedChat;\r\n            let allChats = store.getState().userReducer.allChats;\r\n\r\n            if(selectedChat?._id !== message.chatId){\r\n                const updatedchats = allChats.map(chat => {\r\n                    if(chat._id === message.chatId){\r\n                        return {\r\n                            ...chat,\r\n                            unreadMessageCount: (chat?.unreadMessageCount || 0) + 1,\r\n                            lastMessage: message\r\n                        };\r\n                    }\r\n                    return chat;\r\n                });\r\n                allChats = updatedchats;\r\n            }\r\n            //1. FIND THE LATEST CHAT\r\n            const latestChat = allChats.find(chat => chat._id === message.chatId);\r\n\r\n\r\n            //2. GET ALL OTHER CHATS\r\n            const otherChats = allChats.filter(chat => chat._id !== message.chatId);\r\n\r\n            //3. CREATE A NEW ARRAY LATEST CHA ON TOP & THN OTHER CHATS\r\n            allChats = [latestChat, ...otherChats];\r\n\r\n            dispatch(setAllChats(allChats));\r\n        })\r\n    }, [])\r\n\r\n    const getUnreadMessageCount = (userId) => {\r\n        const chat = allChats.find(chat => \r\n            chat.members.map(m => m._id).includes(userId)\r\n        );\r\n\r\n        if(chat && chat.unreadMessageCount && chat.lastMessage?.sender !== currentUser._id){\r\n            return <div className=\"unread-message-counter\"> {chat.unreadMessageCount} </div>;\r\n        }else{\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    function getData(){\r\n        if(searchKey === \"\"){\r\n            return allChats;\r\n        }else{\r\n            return allUsers.filter(user => {\r\n                return user.firstname?.toLowerCase().includes(searchKey?.toLowerCase()) ||\r\n                    user.lastname?.toLowerCase().includes(searchKey?.toLowerCase());\r\n            });\r\n        }\r\n    }\r\n    \r\n    return (\r\n        getData()\r\n        .map(obj => {\r\n            let user = obj;\r\n            if(obj.members){\r\n                user = obj.members.find(mem => mem._id !== currentUser._id);\r\n            }\r\n            \r\n            return <div className=\"user-search-filter\" onClick={() => openChat(user._id)} key={user._id}>\r\n                <div className={IsSelectedChat(user) ? \"selected-user\": \"filtered-user\"}>\r\n                    <div className=\"filter-user-display\">\r\n                        {user.profilePic && <img src={user.profilePic} \r\n                                                alt=\"Profile Pic\" \r\n                                                className=\"user-profile-image\" \r\n                                                style={onlineUser.includes(user._id) ? {border: '#82e0aa 3px solid'} : {}} \r\n                                            />}\r\n\r\n                        {!user.profilePic &&<div \r\n                                                className={IsSelectedChat(user)? \"user-selected-avatar\" : \"user-default-avatar\"}\r\n                                                style={onlineUser.includes(user._id) ? {border: '#82e0aa 3px solid'} : {}}\r\n                                            >\r\n                            {\r\n                                user.firstname.charAt(0).toUpperCase() + \r\n                                user.lastname.charAt(0).toUpperCase()\r\n                            }\r\n                        </div>}\r\n                        <div className=\"filter-user-details\">\r\n                            <div className=\"user-display-name\">{ formatName(user)}</div>\r\n                            <div className=\"user-display-email\">{ getlastMessage(user._id) || user.email }</div>\r\n                        </div>\r\n                        <div>\r\n                            { getUnreadMessageCount(user._id) }\r\n                            <div className=\"last-message-timestamp\">{ getLastMessageTimeStamp(user._id)}</div>\r\n                        </div>\r\n                        { !allChats.find(chat => chat.members.map(m => m._id).includes(user._id)) &&\r\n                            <div className=\"user-start-chat\">\r\n                                <button className=\"user-start-chat-btn\" onClick={() => startNewChat(user._id)}>\r\n                                    Start Chat\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    </div>                        \r\n            </div>\r\n        })\r\n    )\r\n}\r\n\r\nexport default UsersList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}